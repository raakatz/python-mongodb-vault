from flask import Flask, render_template, request, redirect, url_for, session
from pymongo import MongoClient
from dotenv import load_dotenv
import re
import requests
import json
import base64
import time
import os
import logging


# db credentials are waiting for the application in .env file generated by Vault Agent
load_dotenv()

DB_USERNAME = os.environ['DB_USERNAME']
DB_PASSWORD = os.environ['DB_PASSWORD']

print(f'''
THIS IS FOR DEMONSTRATION PURPOSES
DB username is {DB_USERNAME}
DB password is {DB_PASSWORD}
''')

app = Flask(__name__)

log = logging.getLogger('werkzeug')
log.setLevel(logging.ERROR)

client = MongoClient(f'myapp-mongodb', 27017, username=DB_USERNAME, password=DB_PASSWORD, authSource='my_database')
db = client.my_database
users = db.users

@app.route('/')
@app.route('/register', methods =['GET', 'POST'])
def register():
    msg = ''
    if request.method == 'POST' and 'FirstName' in request.form and 'LastName' in request.form and 'CreditCard' in request.form:
        
        FirstName = request.form['FirstName']
        LastName = request.form['LastName']
        CreditCard = request.form['CreditCard']
        
        CreditCard_bytes = CreditCard.encode("ascii")
        b64_bytes = base64.b64encode(CreditCard_bytes)
        b64_string = b64_bytes.decode("ascii")
        
        # NOTICE - localhost, no auth token
        encryption_res = requests.post('http://localhost:8200/v1/transit/encrypt/my-key', data={"plaintext": b64_string})
        cipher = encryption_res.json()["data"]["ciphertext"]

        users.insert_one({"FirstName": FirstName, "LastName": LastName, "CreditCard": cipher})

        msg = 'You have successfully registered!'
        
    elif request.method == 'POST':
        msg = 'Please fill out the form'
        
    return render_template('register.html', msg = msg)

